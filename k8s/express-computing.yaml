---
apiVersion: v1
kind: Service
metadata:
  name: computing-service
  labels:
    app: computing
spec:
  type: LoadBalancer
  selector:
    app: computing
  ports:
    - port: 80
      protocol: TCP
      nodePort: 30006
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    events {
      worker_connections  4096;  ## Default: 1024
    }
    http {
      server {
        listen 80;

        server_name computing-nginx;

        location / {
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          proxy_pass http://localhost:3000;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: computing
  labels:
    app: computing
spec:
  selector:
    matchLabels:
      app: computing
  template:
    metadata:
      labels:
        app: computing
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
        - name: computing
          image: kofeebrian/computing-service:v1
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 3000
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
